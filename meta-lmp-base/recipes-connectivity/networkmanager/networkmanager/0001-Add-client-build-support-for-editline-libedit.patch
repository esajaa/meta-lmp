From f94c2721002df923b5a70b3fdc44199a3987338e Mon Sep 17 00:00:00 2001
From: Ricardo Salveti <ricardo@foundries.io>
Date: Thu, 1 Apr 2021 19:07:29 -0300
Subject: [PATCH] Add client build support for editline (libedit)

Upstream-Status: Pending

Signed-off-by: Ricardo Salveti <ricardo@foundries.io>
---
 clients/cli/agent.c       |  6 ++++++
 clients/cli/common.c      | 12 ++++++++++++
 clients/cli/connections.c | 12 ++++++++++++
 clients/cli/devices.c     |  4 ++++
 clients/cli/nmcli.c       |  6 ++++++
 m4/ax_lib_readline.m4     |  2 +-
 6 files changed, 41 insertions(+), 1 deletion(-)

diff --git a/clients/cli/agent.c b/clients/cli/agent.c
index a3c60c46e7..e8b288894e 100644
--- a/clients/cli/agent.c
+++ b/clients/cli/agent.c
@@ -7,8 +7,14 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#if defined(HAVE_READLINE_READLINE_H)
 #include <readline/readline.h>
+#elif defined(HAVE_EDITLINE_READLINE_H)
+#include <editline/readline.h>
+#endif
+#if defined(HAVE_READLINE_HISTORY_H)
 #include <readline/history.h>
+#endif
 
 #include "common.h"
 #include "utils.h"
diff --git a/clients/cli/common.c b/clients/cli/common.c
index 934ff70ef0..c70cf619af 100644
--- a/clients/cli/common.c
+++ b/clients/cli/common.c
@@ -10,8 +10,14 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <sys/ioctl.h>
+#if defined(HAVE_READLINE_READLINE_H)
 #include <readline/readline.h>
+#elif defined(HAVE_EDITLINE_READLINE_H)
+#include <editline/readline.h>
+#endif
+#if defined(HAVE_READLINE_HISTORY_H)
 #include <readline/history.h>
+#endif
 
 #include "nm-libnm-aux/nm-libnm-aux.h"
 
@@ -995,7 +1001,9 @@ nmc_readline_echo(const NmcConfig *nmc_config, gboolean echo_on, const char *pro
     va_list       args;
     gs_free char *prompt = NULL;
     char *        str;
+#if defined(HAVE_READLINE_HISTORY_H)
     nm_auto_free HISTORY_STATE *saved_history  = NULL;
+#endif
     HISTORY_STATE               passwd_history = {
         0,
     };
@@ -1008,8 +1016,10 @@ nmc_readline_echo(const NmcConfig *nmc_config, gboolean echo_on, const char *pro
 
     /* Hide the actual password */
     if (!echo_on) {
+#if defined(HAVE_READLINE_HISTORY_H)
         saved_history = history_get_history_state();
         history_set_history_state(&passwd_history);
+#endif
         /* stifling history is important as it tells readline to
          * not store anything, otherwise sensitive data could be
          * leaked */
@@ -1022,7 +1032,9 @@ nmc_readline_echo(const NmcConfig *nmc_config, gboolean echo_on, const char *pro
     /* Restore the non-hiding behavior */
     if (!echo_on) {
         rl_redisplay_function = rl_redisplay;
+#if defined(HAVE_READLINE_HISTORY_H)
         history_set_history_state(saved_history);
+#endif
     }
 
     return str;
diff --git a/clients/cli/connections.c b/clients/cli/connections.c
index ee7b8fbbe9..7fbc11c8b3 100644
--- a/clients/cli/connections.c
+++ b/clients/cli/connections.c
@@ -11,8 +11,14 @@
 #include <stdlib.h>
 #include <unistd.h>
 #include <signal.h>
+#if defined(HAVE_READLINE_READLINE_H)
 #include <readline/readline.h>
+#elif defined(HAVE_EDITLINE_READLINE_H)
+#include <editline/readline.h>
+#endif
+#if defined(HAVE_READLINE_HISTORY_H)
 #include <readline/history.h>
+#endif
 #include <fcntl.h>
 
 #include "nm-client-utils.h"
@@ -6430,8 +6436,10 @@ gen_property_values(const char *text, int state)
     return nmc_rl_gen_func_basic(text, state, avals);
 }
 
+#if defined(HAVE_READLINE_READLINE_H)
 /* from readline */
 extern int rl_complete_with_tilde_expansion;
+#endif
 
 /*
  * Attempt to complete on the contents of TEXT.  START and END show the
@@ -6459,8 +6467,10 @@ nmcli_editor_tab_completion(const char *text, int start, int end)
     /* Disable default filename completion */
     rl_attempted_completion_over = 1;
 
+#if defined(HAVE_READLINE_READLINE_H)
     /* Enable tilde expansion when filenames are completed */
     rl_complete_with_tilde_expansion = 1;
+#endif
 
     /* Filter out possible ANSI color escape sequences */
     prompt_tmp = nmc_filter_out_colors((const char *) rl_prompt);
@@ -9581,7 +9591,9 @@ nmcli_con_tab_completion(const char *text, int start, int end)
         generator_func           = _meta_abstract_generator;
     } else if (g_strcmp0(rl_prompt, PROMPT_IMPORT_FILE) == 0) {
         rl_attempted_completion_over     = 0;
+#if defined(HAVE_READLINE_READLINE_H)
         rl_complete_with_tilde_expansion = 1;
+#endif
     } else if (g_strcmp0(rl_prompt, PROMPT_VPN_CONNECTION) == 0) {
         generator_func = gen_vpn_ids;
     }
diff --git a/clients/cli/devices.c b/clients/cli/devices.c
index eea82653c0..eec1a825bd 100644
--- a/clients/cli/devices.c
+++ b/clients/cli/devices.c
@@ -9,7 +9,11 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#if defined(HAVE_READLINE_READLINE_H)
 #include <readline/readline.h>
+#elif defined(HAVE_EDITLINE_READLINE_H)
+#include <editline/readline.h>
+#endif
 #include <linux/if_ether.h>
 
 #include "nm-glib-aux/nm-secret-utils.h"
diff --git a/clients/cli/nmcli.c b/clients/cli/nmcli.c
index 3945721105..75ff39fd08 100644
--- a/clients/cli/nmcli.c
+++ b/clients/cli/nmcli.c
@@ -15,8 +15,14 @@
 #include <unistd.h>
 #include <locale.h>
 #include <glib-unix.h>
+#if defined(HAVE_READLINE_READLINE_H)
 #include <readline/readline.h>
+#elif defined(HAVE_EDITLINE_READLINE_H)
+#include <editline/readline.h>
+#endif
+#if defined(HAVE_READLINE_HISTORY_H)
 #include <readline/history.h>
+#endif
 
 #include "nm-client-utils.h"
 
diff --git a/m4/ax_lib_readline.m4 b/m4/ax_lib_readline.m4
index af32fdaff7..8b23105d74 100644
--- a/m4/ax_lib_readline.m4
+++ b/m4/ax_lib_readline.m4
@@ -92,7 +92,7 @@ AC_DEFUN([AX_LIB_READLINE], [
 
   ORIG_LIBS="$LIBS"
   LIBS="$LIBS $ax_cv_lib_readline"
-  AC_CHECK_HEADERS(readline.h readline/readline.h)
+  AC_CHECK_HEADERS(readline.h readline/readline.h editline/readline.h)
 
   # Check history
   AC_CACHE_CHECK([whether readline supports history],
-- 
2.31.1

